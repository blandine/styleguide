// Timepicker
//
//The timepicker is based on bootstraps timepicker and all we do is wrap it and apply
//some special classes to make it more compatible with material design.
//
//Options to configure the time-picker  
//- use-meridian : use 12-hour format or 24-hour format
//- hour-step: hour-change per keypress of up/down arrow key or mousewheel scroll
//- minute-step: minute-change per keypress of up/down arrow key or mousewheel scroll
//- max-time: max time to be considered valid
//- min-time: min time to be considered valid
//
//In the demo, the timepicker is bound to the scope variable, with the following initialization at the page-load:
//<pre>
//  scope.sometime = new Date();
//  scope.useMeridian = false;
//  scope.minTime = new Date();
// </pre>
//you can also use the following controls to manipulate the underlying time.
//<div layout="row" layout-margin>
//  <button class="btn" ng-click="increaseOneHour()" flex>Add 1 hour</button>
//  <button class="btn" ng-click="decreaseOneHour()" flex>Minus 1 hour</button>
//  <button class="btn" ng-click="increase15Minute()" flex>Add 15 minute</button>
//  <button class="btn" ng-click="decrease15Minute()" flex>Minus 15 minute</button>
//  <button class="btn" ng-click=" useMeridian = !useMeridian" flex>Toggle meridian</button>
//</div>
//<p></p>
//
//Markup:
//<div class="wfm-timepicker-wrapper">
//  <wfm-timepicker ng-model="sometime" use-meridian="useMeridian" minute-step="15" min-time="minTime"></wfm-timepicker>
//</div>
//
//
//
//Styleguide 2.3
//



.wfm-timepicker-wrapper {
  width: 150px;
  
  select {
    padding-top: 0px !important;
    padding-bottom: 0px !important;
    margin-left: 3px;
    border-radius: 0px !important;
    background-color: white;
    -webkit-appearance: none;
    -webkit-border-radius: 0px;
  }
  input {
    padding-left: 5px;

    &.ng-dirty.ng-invalid {
      border-color: red;
    }
    &.ng-pristine.ng-invalid {
      border-color: pink;
    }
  }
}

